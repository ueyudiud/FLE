package fle.core;

import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLFingerprintViolationEvent;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLLoadCompleteEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.network.NetworkCheckHandler;
import cpw.mods.fml.common.network.NetworkRegistry;
import cpw.mods.fml.relauncher.Side;
import farcore.FarCore;
import farcore.FleMod;
import farcore.util.ColorMap;
import farcore.util.FleLog;
import farcore.util.IColorMapHandler;
import flapi.util.Values;
import fle.core.net.NWH;
import fle.core.util.FleColorMap;
import fle.core.util.FleServerColorMapHandler;
import fle.core.util.FleSetup;
import fle.core.util.Keyboard;
import fle.core.util.LanguageManager;
import fle.core.util.SideGateway;
import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.texture.TextureMap;
import net.minecraftforge.common.ForgeVersion;
import net.minecraftforge.common.config.Configuration;

@Mod(modid = FLE.MODID, name = FLE.NAME, version = FLE.VERSION, dependencies = "after:IC2")
public class FLE implements FleMod
{	
    public static final String MODID = "fle";
    public static final String NAME = "Far Land Era";
    public static final String VERSION = "2.06g";
    public static final int minForge = 1420;
    
//    private static final UUID modUUID = new UUID(-7834374458361585156L, -677774718L);
    
    @Instance(MODID)
    public static FLE fle;

    private List<String> childModList = new ArrayList();
    @SidedProxy(modId = MODID, clientSide = "fle.core.ClientProxy", serverSide = "fle.core.CommonProxy")
    public static Proxy proxy = new CommonProxy();
//    private SideGateway<IPlatform> p;
//    private SideGateway<FWM> wm;
    private NWH nw;
//    private CropRegister cr;
//    private FlePlantRegister pr;
//    private FleTechManager tm;
//    private FleThermalNet tn;
//    private FleRotationNet rn;
    private SideGateway<Keyboard> k;
    private Configuration config;
    
    public FLE() 
    {
    	new FleSetup().setup();
    	FarCore.mod = fle = this;
    	FarCore.lang = new LanguageManager();
    	//FleAPI.ra = new FLERA();
//    	p = new SideGateway<IPlatform>("fle.core.PlatformCommon", "fle.core.PlatformClient");
    	k = new SideGateway<Keyboard>("fle.core.util.Keyboard", "fle.core.util.KeyboardClient");
    	nw = NWH.init();
//    	cr = new FleCropRegister();
//    	pr = new FlePlantRegister();
//    	wm = new SideGateway<FWM>("fle.core.world.FWM", "fle.core.world.FWMClient");
//    	tm = new FleTechManager();
//    	tn = new FleThermalNet();
//    	rn = new FleRotationNet();
    }
    
    @EventHandler
    public void invalidFingerprint(FMLFingerprintViolationEvent event)
    {
//        String str = getClass().getResource("").getPath();
//        long i = str.length();
//        long i1 = (MODID.hashCode() * 31 + VERSION.hashCode()) * 31 + NAME.hashCode();
//        for(char c : str.toCharArray())
//        	i = i * 31 + c;
//        UUID uuid = new UUID(i, i1);
//        if (modUUID.equals(uuid))
//        {
//            FleLog.getLogger().info("The resource of Far Land Era are running.");
//        }
//        else if(modUUID.getLeastSignificantBits() == i1)
//        {
//            FleLog.getLogger().info(
//            		"The copy of Far Land Era that you are running has been modified from the original, "
//            		+ "and unpredictable things may happen. Please consider re-downloading the original version of the mod.");
//        }
//        else
//        {
//        	throw new RuntimeException(
//            		"The copy of Far Land Era that you are running is a development version of the mod, "
//            		+ "and as such may be unstable and/or incomplete.");
//        }
    }

    @EventHandler
    public void preLoad(FMLPreInitializationEvent event)
    {
    	FleLog.setLogger(event.getModLog());
        ModMetadata mm = event.getModMetadata();
        mm.credits = "ueyudiud";
        mm.description = "Far tech mod.";
        mm.autogenerated = false;
        mm.authorList = Arrays.asList("ueyudiud");
        mm.version = VERSION;
        mm.url = "http://tieba.baidu.com/p/3977359185";
        mm.logoFile = "/assets/" + Values.TEXTURE_FILE + "/textures/logo.png";
        
    	FleLog.getLogger().info("Far Land Era start checking forge version.");
        int forge = ForgeVersion.getBuildVersion();
        if ((forge > 0) && (forge < minForge))
        {
        	throw new RuntimeException("The currently installed version of "
        			+ "Minecraft Forge (" + ForgeVersion.getMajorVersion() + "." + ForgeVersion.getMinorVersion() + "." + 
        					ForgeVersion.getRevisionVersion() + "." + forge + ") is too old.\n" + 
        			"Please update the Minecraft Forge.\n" + "\n" + 
        					"(Technical information: " + forge + " < " + minForge + ")");
        }
    	FleLog.getLogger().info("Far Land Era start load config.");
        try
        {
        	File configFile = new File(new File(FarCore.getMinecraftDir(), "config"), "FLE.cfg");
        	//File recipe = new File(new File(p.get().getMinecraftDir(), "config"), "FLE Recipe.csv");
        	config = new Configuration(configFile);
        	config.load();
        	FleLog.getLogger().info("Config loaded from " + configFile.getAbsolutePath());
        }
        catch (Exception e)
        {
        	FleLog.getLogger().warn("Error while trying to access configuration! " + e);
        	config = null;
        }
//        if(config != null)
//        {
//            Config.init(config);
//        }
    	FleLog.getLogger().info("Far Land Era start pre load.");
		LanguageManager.load();
		proxy.onPreload();
	}

    @EventHandler
    public void load(FMLInitializationEvent event)
    {
    	FleLog.getLogger().info("Far Land Era start load.");
    	proxy.onLoad();
	}

    @EventHandler
    public void postLoad(FMLPostInitializationEvent event)
    {
    	FleLog.getLogger().info("Far Land Era start post load.");
    	NetworkRegistry.INSTANCE.registerGuiHandler(MODID, new CommonProxy());
    	proxy.onPostload();
	}

    @EventHandler
    public void completeLoad(FMLLoadCompleteEvent event)
    {
    	FleLog.getLogger().info("Far Land Era start complete load.");
    	proxy.onCompleteLoad();
    	FleLog.getLogger().info("Saving languages.");
    	LanguageManager.save();
    	if(config != null)
    	{
            config.save();
    	}
	}

	@Override
	public NWH getNetworkHandler() 
	{
		return nw;
	}

//	@Override
//	public FleThermalNet getThermalNet() 
//	{
//		return tn;
//	}
//
//	@Override
//	public FleRotationNet getRotationNet() 
//	{
//		return rn;
//	}
//
//	@Override
//	public FlePlantRegister getPlantRegister()
//	{
//		return pr;
//	}
//
//	@Override
//	public CropRegister getCropRegister() 
//	{
//		return cr;
//	}
//
//	@Override
//	public FWM getWorldManager() 
//	{
//		return wm.get();
//	}
//
//	@Override
//	public FleTechManager getTechManager() 
//	{
//		return tm;
//	}
	
	public Keyboard getKeyboard()
	{
		return k.get();
	}

//	@Override
//	public FWM getAirConditionProvider()
//	{
//		return wm.get();
//	}

	@NetworkCheckHandler
	public static boolean checkHandler(Map<String, String> version, Side side)
	{
		return true;
	}

	@Override
	public IColorMapHandler getColorMapHandler() 
	{
		return proxy instanceof IColorMapHandler ? (IColorMapHandler) proxy : 
			FleServerColorMapHandler.instance;
	}

	public static void enableLoading(String modid)
	{
		fle.childModList.add(modid);
	}
	
	public static boolean doesExist(String modid)
	{
		return fle.childModList.contains(modid);
	}
}