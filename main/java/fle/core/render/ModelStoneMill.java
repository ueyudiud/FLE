// Date: 2015/9/5 18:13:57
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX
package fle.core.render;

import net.minecraft.entity.Entity;
import net.minecraft.tileentity.TileEntity;
import fle.api.render.ModelPart;

public class ModelStoneMill extends ModelFleBase
{
	//fields
	ModelPart Shape1;
    ModelPart Shape2;
    ModelPart Shape3;
    ModelPart Shape4;
    ModelPart Shape5;
    ModelPart Shape6;
    ModelPart Shape7;
    ModelPart Shape8;
    ModelPart Shape9;
    
    ModelPart Shape10;
    ModelPart Shape11;
  
    public ModelStoneMill()
    {
    	textureWidth = 256;
    	textureHeight = 256;
    
    	Shape1 = new ModelPart(this, 4, 32);
    	Shape1.mirror = true;
    	Shape1.addBox(0F, 0F, 0F, 4, 8, 4);
    	Shape1.setRotationPoint(12F, 0F, 12F);
    	Shape1.setTextureSize(256, 256);
    	setRotation(Shape1, 0F, 0F, 0F);
    	Shape2 = new ModelPart(this, 0, 32);
    	Shape2.mirror = true;
        Shape2.addBox(0F, 0F, 0F, 4, 8, 4);
        Shape2.setRotationPoint(0F, 0F, 12F);
        Shape2.setTextureSize(256, 256);
        setRotation(Shape2, 0F, 0F, 0F);
        Shape3 = new ModelPart(this, 4, 32);
        Shape3.mirror = true;
        Shape3.addBox(0F, 0F, 0F, 4, 8, 4);
        Shape3.setRotationPoint(12F, 0F, 0F);
        Shape3.setTextureSize(256, 256);
        setRotation(Shape3, 0F, 0F, 0F);
        Shape4 = new ModelPart(this, 0, 32);
        Shape4.mirror = true;
        Shape4.addBox(0F, 0F, 0F, 4, 8, 4);
        Shape4.setRotationPoint(0F, 0F, 0F);
        Shape4.setTextureSize(256, 256);
        setRotation(Shape4, 0F, 0F, 0F);
        Shape5 = new ModelPart(this, 4, 32);
        Shape5.mirror = true;
        Shape5.addBox(0F, 0F, 0F, 4, 1, 8);
        Shape5.setRotationPoint(12F, 0F, 4F);
        Shape5.setTextureSize(256, 256);
        setRotation(Shape5, 0F, 0F, 0F);
        Shape6 = new ModelPart(this, 3, 32);
        Shape6.mirror = true;
        Shape6.addBox(0F, 0F, 0F, 4, 1, 8);
        Shape6.setRotationPoint(0F, 0F, 4F);
        Shape6.setTextureSize(256, 256);
        setRotation(Shape6, 0F, 0F, 0F);
        Shape7 = new ModelPart(this, 8, 36);
        Shape7.mirror = true;
        Shape7.addBox(4F, 0F, 0F, 8, 1, 4);
        Shape7.setRotationPoint(0F, 0F, 0F);
        Shape7.setTextureSize(256, 256);
        setRotation(Shape7, 0F, 0F, 0F);
        Shape8 = new ModelPart(this, 8, 32);
        Shape8.mirror = true;
        Shape8.addBox(4F, 0F, 12F, 8, 1, 4);
        Shape8.setRotationPoint(0F, 0F, 0F);
        Shape8.setTextureSize(256, 256);
        setRotation(Shape8, 0F, 0F, 0F);
        Shape9 = new ModelPart(this, 0, 0);
        Shape9.mirror = true;
        Shape9.addBox(-8F, -1F, -8F, 16, 1, 16);
        Shape9.setRotationPoint(8F, 0F, 8F);
        Shape9.setTextureSize(256, 256);
        setRotation(Shape9, 0F, 0F, 0F);
        Shape10 = new ModelPart(this, 80, 0);
        Shape10.addBox(-6F, 0F, -6F, 12, 4, 12);
        Shape10.setRotationPoint(8F, -5F, 8F);
        Shape10.setTextureSize(256, 256);
        Shape10.mirror = true;
        setRotation(Shape10, 0F, 0F, 0F);
        Shape11 = new ModelPart(this, 0, 36);
        Shape11.addBox(0F, 0F, -10F, 2, 2, 4);
        Shape11.setRotationPoint(8F, -5F, 8F);
        Shape11.setTextureSize(256, 256);
        Shape11.mirror = true;
        setRotation(Shape11, 0F, 0F, 0F);
    }
    
    public void setRotation(double r)
    {
    	Shape10.rotationPointY = (float) r;
    	Shape11.rotationPointY = (float) r;
    }
  
    @Override
    public void renderTileEntityAt(TileEntity tile, float f5)
    {
        Shape1.render(tile, f5);
        Shape2.render(tile, f5);
        Shape3.render(tile, f5);
        Shape4.render(tile, f5);
        Shape5.render(tile, f5);
        Shape6.render(tile, f5);
        Shape7.render(tile, f5);
        Shape8.render(tile, f5);
        Shape9.render(tile, f5);
        Shape10.render(tile, f5);
        Shape11.render(tile, f5);
    }
    
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
    {
    	super.render(entity, f, f1, f2, f3, f4, f5);
        Shape1.render(f5);
        Shape2.render(f5);
        Shape3.render(f5);
        Shape4.render(f5);
        Shape5.render(f5);
        Shape6.render(f5);
        Shape7.render(f5);
        Shape8.render(f5);
        Shape9.render(f5);
        Shape10.render(f5);
        Shape11.render(f5);
    }
}