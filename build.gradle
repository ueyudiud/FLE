buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.fle.version}"
group = "${config.fle.group}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${config.fle.name}"

sourceCompatibility = targetCompatibility = "8" // Java 8 required.

compileJava {
    sourceCompatibility = targetCompatibility = "8"
}

repositories {
	maven {
		//JEI
		url "http://dvs1.progwml6.com/files/maven"
	}
	
	maven {
		// HWYLA
		url "http://tehnut.info/maven"
	}
}

tasks.withType(JavaCompile) {  
    options.encoding = "UTF-8"  
}

minecraft {
    version = "1.10.2-12.18.3.2272"
    runDir = "run"
    
    // run in stable MCP, it may cause may mods can not run with main mod in mcp environment.
    mappings = "stable_29"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
	
    replace "@VERSION@", "${config.fle.version}"
}

dependencies {
	deobfCompile 'mezz.jei:jei_1.10.2:3.14.7.420'
	deobfCompile 'mcp.mobius.waila:Hwyla:1.8.17-B31_1.10.2'
	    
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'
	
    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'
	
    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from (sourceSets.main.output) {
        exclude "**/debug/**"
    }
    classifier = 'dev'
    manifest {
        attributes 'FMLCorePlugin': 'nebula.NebulaLoadingPlugin'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

jar {
    exclude "**/debug/**"
    manifest {
        attributes 'FMLCorePlugin': 'nebula.NebulaLoadingPlugin'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

artifacts {
	archives deobfJar
}